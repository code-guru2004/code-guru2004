#include<iostream>
using namespace std;
class Node{
  public:
  int data;
  Node* next;
  Node(int val)
  {
    this->data = val;
    this->next = NULL;
  }

  ~Node()
  {
    int value = this->data;
    if(this->next != NULL)
    {
      delete next;
      next = NULL;
    }
  }
};
void insertAtHead(Node* &tail ,int element, int data)
{
  if(tail == NULL)
  {
    Node* temp = new Node(data);
    tail = temp;
    tail->next = temp;
  }

else{
  Node* curr = tail;
  while (curr->data != element)
  {
      curr = curr->next;
  }
  Node* addto = new Node(data);
  addto->next = curr->next;
  curr->next = addto;
  

}
}
void deletNode(Node* &tail, int element)
{
  if(tail == NULL)
  {
    cout<<"Sorry, the list is empty."<<endl;
    return;
  }
  else{
    Node* prev = tail;
    Node* curr = prev->next;

    while (curr->data != element)
    {
      prev = curr;
      curr = curr->next;
    }
// in circular Linked list ,there are not exixt any NULL 
    prev->next = curr->next;
if( tail ==  curr) 
{
  tail = prev;
}
if(curr == prev)
{
  tail = NULL;
}
curr->next = NULL;
    delete curr;
    
  }
}
void display(Node* tail)
{
  Node* temp = tail;

  do
  {
    cout<<tail->data<<" ";
    tail = tail->next;
  } while (tail!=temp);
  cout<<endl;
}
int main()
{
 
  Node* tail = NULL;
  insertAtHead(tail,3,1);
  display(tail);
  insertAtHead(tail,1,2);
  insertAtHead(tail,2,3);
  insertAtHead(tail,3,4);
  insertAtHead(tail,3,5);
  display(tail);
  deletNode(tail,2);
 display(tail);


    return 0;
}
