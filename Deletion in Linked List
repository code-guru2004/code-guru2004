//Deletion in Linked List
=================================================================================================================================================================================
#include<iostream>
using namespace std;
class Node{

    public:
    int data;
    Node* next;

    Node(int val)
    {
        this->data = val;
        this->next = NULL;
    }
    ~Node()   // destructor
    {
        int value = this->data;
        if(this->next == NULL)
        {
            delete next;
            this->next=NULL;
        }
    }
};

void insertAtFirst(Node* &head,int d)
{
    Node* temp = new Node(d);
    temp->next = head;
    head = temp;

}

void insertAtTail(Node* &tail,int d)
{
    Node* temp = new Node(d);
    tail->next = temp;
    tail = temp;
}

void deleteList(int i, Node* &head)
{
     
    if(i==0)
    {
       Node* temp = head;
        head = head->next;
        delete temp;
    }
    else{
        
        
        Node* curr = head;
        Node* pre = NULL;

        int count = 1;
        while(count<i)
        {
          pre = curr;
          curr = curr->next;
          count++;

        }
        pre->next = curr->next;
        delete curr;


    }
}
void disply(Node* &head)
{
    Node* temp = head;

    while(temp!= NULL)
    {
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}
int main()
{
    Node* node1 = new Node(1);
    Node* head = node1;
    Node* tail = node1;

    // disply(head);

    //insertAtFirst(head,12);
    // //disply(head);

    //     insertAtFirst(head,15);
    // //disply(head);

    //     insertAtFirst(head,20);
    //disply(head);
    insertAtTail(tail,9);

        insertAtTail(tail,10);
    
        insertAtTail(tail,11);
   
        insertAtTail(tail,12);
    disply(head);
    deleteList(2,head);
    disply(head);


    return 0;
}
