// ARRAY
// Leetcode problem -1 : Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.(M)
// Ex: Input: nums = [1,2,3,4,5,6,7], k = 3
//Output: [5,6,7,1,2,3,4]
// Explanation:
// rotate 1 steps to the right: [7,1,2,3,4,5,6]
// rotate 2 steps to the right: [6,7,1,2,3,4,5]
// rotate 3 steps to the right: [5,6,7,1,2,3,4]
=========================================================================================================================================================================================================
//CODE:
//Method-1 : by another array
// Time comp.: O(N)
// Space comp.: O(N)
#include<iostream>
using namespace std;
void rotate(int *arr, int n, int k)
{
    int temp[n];

    for(int i=0;i<n;i++)
    {
        temp[(i+k) % n] = arr[i];
    }
   
    for(int i=0;i<n;i++)
    {
        cout<<temp[i]<<" ";
    }
}
int main()
{
    int arr[100];
    int n;
    cin >> n;

    // input an array

    for(int i=0;i<n;i++)
    {
        cin >> arr[i];
    }
    int k;
    cin >> k;
    // function call

    rotate(arr,n,k);


    return 0;
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Method-2: without using another array
// Time comp.: O(N^2)
// Space comp.: O(N)
#include<iostream>
using namespace std;
void rotate(int *arr,int n ,int k)
{
    for(int i=0; i<k; i++)
    {
        for(int j=0; j<n-1; j++)
        {
            swap(arr[j],arr[j+1]);
            
        }
         
    }cout<<endl;
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }

}
int main()
{

        int arr[100];
    int n;
    cin >> n;

    // input an array

    for(int i=0;i<n;i++)
    {
        cin >> arr[i];
    }
    int k;
    cin >> k;
    // function call

    rotate(arr,n,k);

    return 0;
}
